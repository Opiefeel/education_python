# # –ó–∞–¥–∞—á–Ω–∏–∫ –î–µ–Ω—å 3.
#
# ## üéØ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–µ –∏–º—è –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π—Ç–µ –µ–≥–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º f-—Å—Ç—Ä–æ–∫–∏.
from execnet.gateway_base import init_popen_io

# name = input("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è: ")
# print(f'–ü—Ä–∏–≤–µ—Ç, {name}!')
#
# ## üßπ –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤
# –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Å—Ç—Ä–æ–∫—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ, –∑–∞—Ç–µ–º —É–¥–∞–ª–∏—Ç–µ —ç—Ç–∏ –ø—Ä–æ–±–µ–ª—ã —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ `strip()`.

second_task = "   –ü—Ä–∏–≤–µ—Ç   "
second_task_strip = second_task.strip()
# print(second_task_strip)

# ## üîù –í–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
# –ó–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ, –∞ –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ `upper()`.

# letter = input("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ: ")
# print(letter.upper())

# ## ‚ûï –°–ª–æ–∂–µ–Ω–∏–µ —á–∏—Å–µ–ª
# –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –¥–≤–∞ —á–∏—Å–ª–∞ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∏—Ö —Å–ª–æ–∂–µ–Ω–∏–µ, –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è —Å—Ç—Ä–æ–∫.

# first_number = int(input("–í–≤–µ–¥–∏ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: "))
# second_number = int(input("–í–≤–µ–¥–∏ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: "))
# sum_first_and_second = first_number + second_number

# print(f'{str(sum_first_and_second)} –±—É–¥–µ—Ç —Ä–∞–≤–Ω—è—Ç—å—Å—è {second_number} + {first_number}')

# ## üî¢ –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
# –í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–µ –¥–ª–∏–Ω—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ `len()`.123

string = "asdasfasfasfer122g1"
x = len(string)
# print(x)

# ## üìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±—É–∫–≤—ã
# –ó–∞–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –æ–Ω–∞ —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤, –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ `isalpha()`.

# string = input("–í–≤–µ–¥–∏ —Å—Ç—Ä–æ–∫—É")
# print(f'{string.isalpha() = }')


# ## üìù –°—ã—Ä–∞—è —Å—Ç—Ä–æ–∫–∞
# –°–æ–∑–¥–∞–π—Ç–µ —Å—ã—Ä—É—é —Å—Ç—Ä–æ–∫—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–µ.

# print(r'adasdas\\n\n\n\n\ n wf34#%@#%!&(*!$!@)#@!$@&')

# ## üöÄ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Å–ª–æ–≤–∞
# –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∞ –∑–∞—Ç–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ –µ–≥–æ –Ω–∞ —Å–ª–æ–≤–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ `split()` –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤.

# word_list = input("–í–≤–µ–¥–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å–ª–æ–≤: ")
# print(word_list.split())

# ## üîÑ –ó–∞–º–µ–Ω–∞ —Å–∏–º–≤–æ–ª–æ–≤
# –í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –∏ –∑–∞–º–µ–Ω–∏—Ç–µ –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã –Ω–∞ —Å–∏–º–≤–æ–ª –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ `replace()`.

# string_input = input("–í–≤–µ–¥–∏ —Å—é–¥–∞ —Å–ª–æ–≤–∞ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –ø–∞—Ä–µ–Ω—å, –∞ —è –∏—Ö –∑–∞–º–µ–Ω—é –º–æ—â–Ω–æ: ")
# print(string_input.replace(" ", "_"))

# ## üßÆ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ
# –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏, –∞ –∑–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ —á–∏—Å–ª–æ–º —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ `isdigit()`.

# add = input("–í–≤–µ–¥–∏ —á–∏—Å–ª–æ: ")
# print(f'{add.isdigit() = }')

# ## üö™ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å
# –í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –æ–Ω–∞ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ `startswith()`.

# just_test = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ")
# print(just_test.startswith("1"))

# ## üîç –ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
# –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É –∏ –Ω–∞–π–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ `find()`.

# string_input = input("–í–≤–µ–¥–∏ —Å—é–¥–∞ —Å—Ç—Ä–æ–∫—É: ")
# print(f'{string_input.find("z")}')


# ## üìñ –ó–∞–≥–æ–ª–æ–≤–æ–∫
# –ó–∞–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ, –∞ –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –≤–∏–¥–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ `title()`.

# word = input("–í–≤–µ–¥–∏ —Å–ª–æ–≤–æ: ")
# print(f'{word.title()}')


# ## üìÉ –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
# –°–æ–∑–¥–∞–π—Ç–µ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç—Ä–æ–π–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—É—é f-—Å—Ç—Ä–æ–∫—É, –∏ –≤—Å—Ç–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.

# x1 = '''hello
# wor
# l
# d'''
# print(x)
#
# print(f'''–ø—Ä–æ–≤–µ—Ä–∫–∞ –º–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π f —Å—Ç—Ä–æ–∫–∏, –∞ —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è
# –û–ø–∞, —Ç–µ–ø–µ—Ä—å —Å–Ω–∏–∑—É''')


# ## üö™ –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞
# –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É, –∞ –∑–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –æ–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ `endswith()`.

# word = input("–í–≤–µ–¥–∏ —Ç—ã —É–∂–µ —Å—Ç—Ä–æ–∫—É: ")
# print(f'{word.endswith("g")}')


# ## üîÑ –†–∞–≤–µ–Ω—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
# –ó–∞–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —Ä–∞–≤–Ω—ã –ª–∏ –æ–Ω–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤.

# first = input('–¢—É—Ç –±—É–¥–µ—Ç –ø–µ—Ä–≤–∞—è: ')
# second = input('–¢—É—Ç –±—É–¥–µ—Ç –≤—Ç–æ—Ä–∞—è: ')
# if first == second:
#     print("–°—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω—ã")
# else:
#     print("–í—Å—ë —Ç–∞–∫–∏ —Å—Ç—Ä–æ–∫–∏ –Ω–µ —Ä–∞–≤–Ω—ã")


# ## üîÑ –ü–∞–ª–∏–Ω–¥—Ä–æ–º
# –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ, –∞ –∑–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ `reverse()`.

# checkout = input("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º, –≤–≤–µ–¥–∏ —Å–ª–æ–≤–æ: ").lower().replace(" ", "")
# checkout_reverse = checkout[::-1]
# if checkout == checkout_reverse:
#     print(f'–î–∞, —Å–ª–æ–≤–æ {checkout} –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º!')
# else:
#     print(f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å–ª–æ–≤–æ - {checkout} –Ω–µ –ø–∞–ª–∏–Ω–¥—Ä–æ–º :(((')



# *–≠—Ç–∏ –∑–∞–¥–∞—á–∏ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –∏ –æ–ø–µ—Ä–∞—Ü–∏–π –±–µ–∑ —Ü–∏–∫–ª–æ–≤, —Å–ª–æ–≤–∞—Ä–µ–π, —Å–ø–∏—Å–∫–æ–≤ –∏ —É—Å–ª–æ–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤.*